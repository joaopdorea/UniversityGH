package com.universidadegh.university.entities;

import java.io.Serializable;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;


@Entity
@Table(name = "tb_aluno")
public class Aluno implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long cod_aluno;
	
	private String CPF;
	
	private String nome_aluno;
	
	private Instant data_nasc;
	
	@ManyToMany(mappedBy="alunos")
	private List<Turma> turmas = new ArrayList<>();

	public Aluno(Long cod_aluno, String CPF, String nome_aluno, Instant data_nasc) {
		this.cod_aluno = cod_aluno;
		this.CPF = CPF;
		this.nome_aluno = nome_aluno;
		this.data_nasc = data_nasc;
	}

	public Aluno() {
	}

	public String getCPF() {
		return this.CPF;
	}

	public void setCPF(String cpf) {
		this.CPF = cpf;
	}

	public String getNome_aluno() {
		return nome_aluno;
	}

	public void setNome_aluno(String nome_aluno) {
		this.nome_aluno = nome_aluno;
	}

	public Instant getData_nasc() {
		return data_nasc;
	}

	public void setData_nasc(Instant data_nasc) {
		this.data_nasc = data_nasc;
	}

	public List<Turma> getTurmas() {
		return turmas;
	}


	public Long getCod_aluno() {
		return cod_aluno;
	}

	@Override
	public int hashCode() {
		return Objects.hash(cod_aluno);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Aluno other = (Aluno) obj;
		return Objects.equals(cod_aluno, other.cod_aluno);
	}

	@Override
	public String toString() {
		return "Aluno [cod_aluno=" + cod_aluno + ", CPF=" + CPF + ", nome_aluno=" + nome_aluno + ", data_nasc="
				+ data_nasc + ", turmas=" + turmas + "]";
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
